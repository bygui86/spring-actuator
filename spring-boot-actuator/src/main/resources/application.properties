
# Logging
logging.level.root = INFO

### Spring
spring.application.name = spring-boot-actuator

# Spring DATA
spring.h2.console.enabled = true

# Spring WEB
server.port = 8080

# Spring MAIL
### PLEASE NOTE: in order to test notifications properly, you need to configure locally a fake SMTP server to catch emails (e.g. fakeSMTP or mailhog)
spring.mail.host                                  = localhost
spring.mail.port                                  = 2525

# Spring ACTUATOR
## Endpoints
### Default is /actuator
#management.endpoints.web.base-path = /admin
management.endpoints.jmx.exposure.include = *
management.endpoints.web.exposure.include = *
management.endpoint.shutdown.enabled = true
management.endpoint.logfile.enabled = true
management.endpoint.sessions.enabled = true
### Enable custom endpoints disabled by default
management.endpoint.features.enabled = true
## CORS
#management.endpoints.web.cors.allowed-origins = http://example.com
#management.endpoints.web.cors.allowed-methods = GET,POST
## Health
management.health.defaults.enabled = true
management.health.diskspace.enabled = true
management.health.db.enabled = true
management.health.mail.enabled = true
# available values: never (default) | always | when_authorized
management.endpoint.health.show-details = when_authorized
## Info
management.info.git.enabled = true
### available values: simple (default) | full
management.info.git.mode = full
management.info.build.enabled = true
### Additional
### Automatically added by spring-boot-maven-plugin
### See pom.xml
info.app.name = ${spring.application.name}
info.app.version = @project.version@
info.app.encoding = @project.build.encoding@
info.app.java.version = @project.java.version@

# Spring BOOT ADMIN
spring.boot.admin.client.url = http://localhost:8090
spring.boot.admin.client.username = actuator
spring.boot.admin.client.password = secret
