
# Logging
logging.level.root = INFO
#logging.file = /tmp/logs/spring-actuator-app.log
#logging.file.name = /tmp/logs/spring-actuator-app.log

# Spring
spring.application.name = spring-boot-actuator
### available values: insecure | secure
spring.profiles.active = secure
## JMX
    spring.jmx.enabled = true
## Serialization
#    spring.jackson.serialization.indent_output = true
    spring.jackson.serialization.write_dates_as_timestamps =

# Spring DATA
spring.h2.console.enabled = true

# Spring ACTUATOR
management.server.port = 9080
## Endpoints
    ### Default is /actuator
    #management.endpoints.web.base-path = /admin
    management.endpoints.jmx.exposure.include = *
    management.endpoints.web.exposure.include = *
    management.endpoint.shutdown.enabled = true
    management.endpoint.logfile.enabled = true
    management.endpoint.sessions.enabled = true
    ### 'features' new custom Endpoint is disabled by default
    management.endpoint.features.enabled = true
## CORS
#    management.endpoints.web.cors.allowed-origins = http://example.com
#    management.endpoints.web.cors.allowed-methods = GET,POST
## Health
    ### available values: never (default) | always | when_authorized
    management.endpoint.health.show-details = when_authorized
    management.health.defaults.enabled = true
    management.health.diskspace.enabled = true
    management.health.db.enabled = true
    management.health.mail.enabled = true
## Info
    management.info.git.enabled = true
    ### available values: simple (default) | full
    management.info.git.mode = full
    management.info.build.enabled = true
    ### Additional - Automatically added by spring-boot-maven-plugin (see pom.xml)
    info.app.name = ${spring.application.name}
    info.app.version = @project.version@
    info.app.encoding = @project.build.encoding@
    info.app.java.version = @project.java.version@
## HttpTrace
    management.trace.http.include = request-headers,response-headers,principal,remote-address,session-id

# Spring MAIL
### PLEASE NOTE: in order to test notifications properly, you need to configure locally a fake SMTP server to catch emails (e.g. fakeSMTP or mailhog)
spring.mail.host = localhost
spring.mail.port = 1025
#spring.mail.username =
#spring.mail.password =

# Spring WEB
server.port = 8080
## Tomcat
#    server.tomcat.basedir = target/tomcat
#    server.tomcat.accesslog.enabled = true
#    server.tomcat.accesslog.pattern = %h %t "%r" %s %b
## Undertow
    server.undertow.accesslog.dir = target/undertow
    server.undertow.accesslog.prefix = undertow-logs_
    server.undertow.accesslog.rotate = true
    server.undertow.accesslog.suffix = log
    server.undertow.accesslog.enabled = true
    server.undertow.accesslog.pattern = %h %t "%r" %s %b

# Spring BOOT ADMIN
spring.boot.admin.client.url = http://localhost:10000

spring.boot.admin.client.auto-registration = false

# CUSTOM
custom.actuator.info.contribution.random = ${random.uuid}
custom.actuator.info.contribution.key = contribution
custom.actuator.info.contribution.value = sampleMap
custom.actuator.health.indicator.counter = 42
